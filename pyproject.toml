[project]
name = "oversight-curriculum"
version = "1.0.0"
description = "AI Safety & Reasoning System - Oversight Curriculum"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Oversight Curriculum Team", email = "team@example.com" }
]
maintainers = [
    { name = "Oversight Curriculum Team", email = "team@example.com" }
]
keywords = ["ai-safety", "reasoning", "oversight", "curriculum", "claude", "anthropic", "machine-learning"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Build Tools"
]
requires-python = ">=3.8"
dependencies = [
    "anthropic>=0.7.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "PyYAML>=6.0",
    "httpx>=0.24.0",
    "tenacity>=8.2.0",
    "structlog>=23.0.0",
    "matplotlib>=3.5.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "seaborn>=0.12.0",
    "scikit-learn>=1.3.0",
    "tqdm>=4.65.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "hypothesis>=6.75.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.0",
    "coverage>=7.2.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
]

[project.urls]
Homepage = "https://github.com/oversight-curriculum/oversight-curriculum"
Documentation = "https://github.com/oversight-curriculum/oversight-curriculum#readme"
Repository = "https://github.com/oversight-curriculum/oversight-curriculum"
Issues = "https://github.com/oversight-curriculum/oversight-curriculum/issues"
Changelog = "https://github.com/oversight-curriculum/oversight-curriculum/blob/main/docs/CHANGELOG.md"

[project.scripts]
oversight = "oversight.cli:cli_entry"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["oversight*"]

[tool.setuptools.package-data]
oversight = ["docs/*.svg", "config/*.yaml"]

[tool.setuptools.exclude-package-data]
oversight = ["tests*", "scripts/legacy*"]

[tool.setuptools.dynamic]
version = {attr = "oversight.__version__"}

[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 79
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "F401",  # unused import (shims)
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/test_deduction_loop.py" = ["F401", "E402"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["oversight_curriculum/tests"]
addopts   = "-q -p pytest_asyncio"

[tool.coverage.run]
source = ["oversight"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 